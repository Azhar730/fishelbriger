generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  email           String   @unique
  phoneNumber     String
  password        String
  confirmPassword String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  client          Client[]
}

model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @unique
  location  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  userId            String              @db.ObjectId
  user              User                @relation(fields: [userId], references: [id])
  name              String              @unique
  calculatorId      String              @db.ObjectId
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  primaryCalculator PrimaryCalculator[]
}

// PRIMARY HOME PAGE

// primary calculator
model PrimaryCalculator {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  clientId String @db.ObjectId
  client   Client @relation(fields: [clientId], references: [id])

  purchasePrice       Float
  loanToValuePercent  Float
  downPayment         Float
  loanAmount          Float
  rateParcent         Float
  mortgagePayment     Int
  taxAndInsurance     Float
  pmi                 Float
  hoaFees             Float
  totalMonthlyPayment Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// investment page calculator
model InvestmentCalculator {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// FHA page calculator
model FHACalculator {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Fix And Flip page calculator
model FixAndFlipCalculator {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// HELOC page calculator
model HELOCCalculator {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payment {
  id                  String      @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  propertyName        String
  appraisedValue      Float
  purchasedValue      Float
  loanAmount          Float
  rate                Int
  numberOfPaymentDone Int
  monthlyPayment      Float
  currentLoadAmount   Float
  commission          Float
  note                String
  type                PaymentType

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum PaymentType {
  PIPELINE
  CLOSED
}

// model Customer {
//   id                     String               @id @default(auto()) @map("_id") @db.ObjectId
//   name                   String               @unique
//   primaryCalculatorId    String               @unique @db.ObjectId
//   primaryCalculator      PrimaryCalculator    @relation(fields: [primaryCalculatorId], references: [id])
//   investmentCalculatorId String               @unique @db.ObjectId
//   investmentCalculator   InvestmentCalculator @relation(fields: [investmentCalculatorId], references: [id])
//   fhaCalculatorId        String               @unique @db.ObjectId
//   fhaCalculator          FHACalculator        @relation(fields: [fhaCalculatorId], references: [id])
//   fixAndFlipCalculatorId String               @unique @db.ObjectId
//   fixAndFlipCalculator   FixAndFlipCalculator @relation(fields: [fixAndFlipCalculatorId], references: [id])
//   helocCalculatorId      String               @unique @db.ObjectId
//   helocCalculator        HELOCCalculator      @relation(fields: [helocCalculatorId], references: [id])
//   createdAt              DateTime             @default(now())
//   updatedAt              DateTime             @updatedAt
// }

// model Calculator {
//   id              String       @id @default(auto()) @map("_id") @db.ObjectId
//   clientId        String
//   mortgageType    MortgageType
//   loanTerm        LoanTerm     @default(THIRTY_YEAR)
//   purchasePrice   Float?
//   ltvPercent      Float?
//   downPayment     Float?
//   loanAmount      Float?
//   ratePercent     Float?
//   mortgagePayment Float?
//   closingCost     Float?
//   fhaLoan         Boolean      @default(false)
//   refinance       Boolean      @default(false)
//   fixAndFlip      Boolean      @default(false)
//   heloc           Boolean      @default(false)
//   client          Client[]
//   expense         Expense[]
//   income          Income[]
//   createdAt       DateTime     @default(now())
//   updatedAt       DateTime     @updatedAt
// }

// model Toggle {
//   id        String     @id @default(auto()) @map("_id") @db.ObjectId
//   clientId  String     @db.ObjectId
//   client    Client     @relation(fields: [clientId], references: [id])
//   type      ToggleType
//   value     Boolean
//   createdAt DateTime   @default(now())
// }

// model Expense {
//   id           String        @id @default(auto()) @map("_id") @db.ObjectId
//   calculatorId String        @db.ObjectId
//   calculator   Calculator    @relation(fields: [calculatorId], references: [id])
//   type         ExpenseType
//   amount       Float
//   frequency    FrequencyType
//   createdAt    DateTime      @default(now())
// }

// model Income {
//   id           String        @id @default(auto()) @map("_id") @db.ObjectId
//   calculatorId String        @db.ObjectId
//   calculator   Calculator    @relation(fields: [calculatorId], references: [id])
//   type         IncomeType
//   amount       Float
//   frequency    FrequencyType
//   createdAt    DateTime      @default(now())
// }

// enum MortgageType {
//   PRIMARY
//   INVESTMENT
// }

// enum LoanTerm {
//   TEN_YEAR
//   FIFTEEN_YEAR
//   TWENTY_YEAR
//   THIRTY_YEAR
// }

// enum ToggleType {
//   INVESTMENT
//   FHA
//   REFINANCE
//   FIX_AND_FLIP
//   HELOC
// }

// enum ExpenseType {
//   MORTGAGE
//   PROPERTY_TAX
//   INSURANCE
//   PMI
//   HOA
//   STUDENT_LOAN
//   CREDIT_CARD
//   CAR_LEASE
//   PERSONAL_LOAN
//   OTHER_DEBT
//   CO_SIGNER
// }

// enum FrequencyType {
//   MONTHLY
//   ANNUAL
//   WEEKLY
//   BI_WEEKLY
//   SEMI_MONTHLY
//   QUARTERLY
//   HALF_YEARLY
// }

// enum IncomeType {
//   BORROWER_SALARY
//   COBORROWER_SALARY
//   CHILD_SUPPORT
//   SSA_SSI
//   BUSINESS
//   REO
//   SUBJECT_UNIT
//   OTHER
// }
